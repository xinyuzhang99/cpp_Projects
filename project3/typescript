Script started on 2023-03-22 18:40:15-04:00
bash-4.4$ make
g++ -std=c++98 -Wall -c -g PrintMenu.cpp -o PrintMenu.o
g++ -std=c++98 -Wall -c -g RowColumnClass.cpp -o RowColumnClass.o
g++ -std=c++98 -Wall -c -g ColorClass.cpp -o ColorClass.o
g++ -std=c++98 -Wall -c -g ImageClass.cpp -o ImageClass.o
g++ -std=c++98 -Wall -c -g MessageClass.cpp -o MessageClass.o
g++ -std=c++98 -Wall -c -g project3.cpp -o project3.o
g++ -std=c++98 -g PrintMenu.o RowColumnClass.o ColorClass.o ImageClass.o MessageClass.o project3.o -o proj3.exe
bash-4.4$ valgrind --leak-check=full ./proj3.exe
==2251789== Memcheck, a memory error detector
==2251789== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2251789== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==2251789== Command: ./proj3.exe
==2251789== 
Usage: ./proj3.exe <startPPM.ppm>
==2251789== 
==2251789== HEAP SUMMARY:
==2251789==     in use at exit: 0 bytes in 0 blocks
==2251789==   total heap usage: 2 allocs, 2 frees, 73,728 bytes allocated
==2251789== 
==2251789== All heap blocks were freed -- no leaks are possible
==2251789== 
==2251789== For lists of detected and suppressed errors, rerun with: -s
==2251789== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
bash-4.4$ valgrind --leak-check=full ./proj3.exe deer.ppm
==2253284== Memcheck, a memory error detector
==2253284== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2253284== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==2253284== Command: ./proj3.exe deer.ppm
==2253284== 
Reading initial image from: deer.ppm
Image read successful: Yes
1. Encode a message from file
2. Perform decode
3. Write current image to file
4. Exit the program
Enter your choice: 3
Enter name of file to write image to:  deerNoMod.ppm^[[D^[[D^[[D^[[D                              deerNoMod.ppm
Image write successful: Yes
1. Encode a message from file
2. Perform decode
3. Write current image to file
4. Exit the program
Enter your choice: 1
Enter name of file containing message: EECS402.txt
Enter row and column for message placement: 275 115
Message encode successful: Yes
1. Encode a message from file
2. Perform decode
3. Write current image to file
4. Exit the program
Enter your choice: 3
Enter name of file to write image to: deerEncoded.ppm
Image write successful: Yes
1. Encode a message from file
2. Perform decode
3. Write current image to file
4. Exit the program
Enter your choice: 2
Image modified to decoded image contents
1. Encode a message from file
2. Perform decode
3. Write current image to file
4. Exit the program
Enter your choice: 3
Enter name of file to write image to: deerDecoded.ppm
Image write successful: Yes
1. Encode a message from file
2. Perform decode
3. Write current image to file
4. Exit the program
Enter your choice: 4
Thanks for using this program!
==2253284== 
==2253284== HEAP SUMMARY:
==2253284==     in use at exit: 3,259,956 bytes in 539 blocks
==2253284==   total heap usage: 552 allocs, 13 frees, 3,378,108 bytes allocated
==2253284== 
==2253284== 16,356 (696 direct, 15,660 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 4
==2253284==    at 0x4C38B6F: operator new[](unsigned long) (vg_replace_malloc.c:640)
==2253284==    by 0x4046B4: MessageClass::checkValue(std::basic_ifstream<char, std::char_traits<char> >&, bool&) (MessageClass.cpp:66)
==2253284==    by 0x403DC9: ImageClass::encodeMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, RowColumnClass const&) (ImageClass.cpp:265)
==2253284==    by 0x404C0B: main (project3.cpp:82)
==2253284== 
==2253284== 3,243,600 (3,600 direct, 3,240,000 indirect) bytes in 1 blocks are definitely lost in loss record 4 of 4
==2253284==    at 0x4C38B6F: operator new[](unsigned long) (vg_replace_malloc.c:640)
==2253284==    by 0x4037BE: ImageClass::checkPixel(std::basic_ifstream<char, std::char_traits<char> >&, bool&) (ImageClass.cpp:167)
==2253284==    by 0x403C44: ImageClass::checkInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&) (ImageClass.cpp:241)
==2253284==    by 0x404A60: main (project3.cpp:44)
==2253284== 
==2253284== LEAK SUMMARY:
==2253284==    definitely lost: 4,296 bytes in 2 blocks
==2253284==    indirectly lost: 3,255,660 bytes in 537 blocks
==2253284==      possibly lost: 0 bytes in 0 blocks
==2253284==    still reachable: 0 bytes in 0 blocks
==2253284==         suppressed: 0 bytes in 0 blocks
==2253284== 
==2253284== For lists of detected and suppressed errors, rerun with: -s
==2253284== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
bash-4.4$ valgrind --leak-check=full ./proj3.exe deer.ppm[K[K[K[K[K[K[K[KdeerBad.ppm
==2254048== Memcheck, a memory error detector
==2254048== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2254048== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==2254048== Command: ./proj3.exe deerBad.ppm
==2254048== 
Reading initial image from: deerBad.ppm
Error: EOF before reading green value
Error: Reading image pixel at row: 380 col: 0
Image read successful: No
Error: While reading the image, an error was encountered. Exiting the program!
==2254048== 
==2254048== HEAP SUMMARY:
==2254048==     in use at exit: 3,243,600 bytes in 451 blocks
==2254048==   total heap usage: 455 allocs, 4 frees, 3,326,008 bytes allocated
==2254048== 
==2254048== LEAK SUMMARY:
==2254048==    definitely lost: 0 bytes in 0 blocks
==2254048==    indirectly lost: 0 bytes in 0 blocks
==2254048==      possibly lost: 0 bytes in 0 blocks
==2254048==    still reachable: 3,243,600 bytes in 451 blocks
==2254048==         suppressed: 0 bytes in 0 blocks
==2254048== Reachable blocks (those to which a pointer was found) are not shown.
==2254048== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==2254048== 
==2254048== For lists of detected and suppressed errors, rerun with: -s
==2254048== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
bash-4.4$ exit
exit

Script done on 2023-03-22 18:42:03-04:00
