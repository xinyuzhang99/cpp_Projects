Script started on 2023-04-02 19:58:11-04:00
bash-4.4$ make
g++ -std=c++98 -Wall -c -g PrintMenu.cpp -o PrintMenu.o
g++ -std=c++98 -Wall -c -g RowColumnClass.cpp -o RowColumnClass.o
g++ -std=c++98 -Wall -c -g ColorClass.cpp -o ColorClass.o
g++ -std=c++98 -Wall -c -g ImageClass.cpp -o ImageClass.o
g++ -std=c++98 -Wall -c -g MessageClass.cpp -o MessageClass.o
g++ -std=c++98 -Wall -c -g project3.cpp -o project3.o
g++ -std=c++98 -g PrintMenu.o RowColumnClass.o ColorClass.o ImageClass.o MessageClass.o project3.o -o proj3.exe
bash-4.4$ valgrind --leak-check=full ./proj3.exe deer.ppm
==2449340== Memcheck, a memory error detector
==2449340== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2449340== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==2449340== Command: ./proj3.exe deer.ppm
==2449340== 
Reading initial image from: deer.ppm
Image read successful: Yes
1. Encode a message from file
2. Perform decode
3. Write current image to file
4. Exit the program
Enter your choice: 3
Enter name of file to write image to: deerNoMod.ppm
Image write successful: Yes
1. Encode a message from file
2. Perform decode
3. Write current image to file
4. Exit the program
Enter your choice: 1
Enter name of file containing message: EECS402.txt
Enter row and column for message placement: 275 115
Message encode successful: Yes
1. Encode a message from file
2. Perform decode
3. Write current image to file
4. Exit the program
Enter your choice: 3
Enter name of file to write image to: deerEncoded.ppm
2 Image write successful: Yes
1. Encode a message from file
2. Perform decode
3. Write current image to file
4. Exit the program
Enter your choice: 2
Image modified to decoded image contents
1. Encode a message from file
2. Perform decode
3. Write current image to file
4. Exit the program
Enter your choice: deerDecoded.ppm               3
Enter name of file to write image to: deerDecoded.ppm
Image write successful: Yes
1. Encode a message from file
2. Perform decode
3. Write current image to file
4. Exit the program
Enter your choice: 4
Thanks for using this program!
==2449340== 
==2449340== HEAP SUMMARY:
==2449340==     in use at exit: 3,259,956 bytes in 539 blocks
==2449340==   total heap usage: 552 allocs, 13 frees, 3,378,108 bytes allocated
==2449340== 
==2449340== 16,356 (696 direct, 15,660 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 4
==2449340==    at 0x4C38B6F: operator new[](unsigned long) (vg_replace_malloc.c:640)
==2449340==    by 0x4047DA: MessageClass::checkValue(std::basic_ifstream<char, std::char_traits<char> >&) (MessageClass.cpp:68)
==2449340==    by 0x403ECE: ImageClass::encodeMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, RowColumnClass const&) (ImageClass.cpp:263)
==2449340==    by 0x404D85: main (project3.cpp:88)
==2449340== 
==2449340== 3,243,600 (3,600 direct, 3,240,000 indirect) bytes in 1 blocks are definitely lost in loss record 4 of 4
==2449340==    at 0x4C38B6F: operator new[](unsigned long) (vg_replace_malloc.c:640)
==2449340==    by 0x4038A4: ImageClass::checkPixel(std::basic_ifstream<char, std::char_traits<char> >&) (ImageClass.cpp:171)
==2449340==    by 0x403D3C: ImageClass::checkInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (ImageClass.cpp:237)
==2449340==    by 0x404B88: main (project3.cpp:43)
==2449340== 
==2449340== LEAK SUMMARY:
==2449340==    definitely lost: 4,296 bytes in 2 blocks
==2449340==    indirectly lost: 3,255,660 bytes in 537 blocks
==2449340==      possibly lost: 0 bytes in 0 blocks
==2449340==    still reachable: 0 bytes in 0 blocks
==2449340==         suppressed: 0 bytes in 0 blocks
==2449340== 
==2449340== For lists of detected and suppressed errors, rerun with: -s
==2449340== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
bash-4.4$ valgrind --leak-check=full ./proj3.exe
==2450474== Memcheck, a memory error detector
==2450474== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2450474== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==2450474== Command: ./proj3.exe
==2450474== 
Usage: ./proj3.exe <startPPM.ppm>
==2450474== 
==2450474== HEAP SUMMARY:
==2450474==     in use at exit: 0 bytes in 0 blocks
==2450474==   total heap usage: 2 allocs, 2 frees, 73,728 bytes allocated
==2450474== 
==2450474== All heap blocks were freed -- no leaks are possible
==2450474== 
==2450474== For lists of detected and suppressed errors, rerun with: -s
==2450474== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
bash-4.4$ valgrind --leak-check=full [K./proj3.exe deerBad.ppm[1@ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
==2450477== Memcheck, a memory error detector
==2450477== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2450477== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==2450477== Command: ./proj3.exe deerBad.ppm
==2450477== 
Reading initial image from: deerBad.ppm
Error: EOF before reading green value
Error: Reading image pixel at row: 380 col: 0
Image read successful: No
Error: While reading the image, an error was encountered. Exiting the program!
==2450477== 
==2450477== HEAP SUMMARY:
==2450477==     in use at exit: 3,243,600 bytes in 451 blocks
==2450477==   total heap usage: 455 allocs, 4 frees, 3,326,008 bytes allocated
==2450477== 
==2450477== LEAK SUMMARY:
==2450477==    definitely lost: 0 bytes in 0 blocks
==2450477==    indirectly lost: 0 bytes in 0 blocks
==2450477==      possibly lost: 0 bytes in 0 blocks
==2450477==    still reachable: 3,243,600 bytes in 451 blocks
==2450477==         suppressed: 0 bytes in 0 blocks
==2450477== Reachable blocks (those to which a pointer was found) are not shown.
==2450477== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==2450477== 
==2450477== For lists of detected and suppressed errors, rerun with: -s
==2450477== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
bash-4.4$ valgrind --leak-check=full ./proj3.exe deerBad.ppm[K deer.ppm
==2450480== Memcheck, a memory error detector
==2450480== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2450480== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==2450480== Command: ./proj3.exe deer.ppm
==2450480== 
Reading initial image from: deer.ppm
Image read successful: Yes
1. Encode a message from file
2. Perform decode
3. Write current image to file
4. Exit the program
Enter your choice: 1
Enter name of file containing message: msgBad.txt
Enter row and column for message placement: 50 50
Error: Reading message value at row: 1 col: 2
Message encode successful: No
1. Encode a message from file
2. Perform decode
3. Write current image to file
4. Exit the program
Enter your choice: 43
Error: Please enter the valid choice
1. Encode a message from file
2. Perform decode
3. Write current image to file
4. Exit the program
Enter your choice: hi
Error: Please enter an integer
1. Encode a message from file
2. Perform decode
3. Write current image to file
4. Exit the program
Enter your choice: 4
Thanks for using this program!
==2450480== 
==2450480== HEAP SUMMARY:
==2450480==     in use at exit: 3,243,740 bytes in 457 blocks
==2450480==   total heap usage: 464 allocs, 7 frees, 3,335,852 bytes allocated
==2450480== 
==2450480== 140 (40 direct, 100 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 4
==2450480==    at 0x4C38B6F: operator new[](unsigned long) (vg_replace_malloc.c:640)
==2450480==    by 0x4047DA: MessageClass::checkValue(std::basic_ifstream<char, std::char_traits<char> >&) (MessageClass.cpp:68)
==2450480==    by 0x403ECE: ImageClass::encodeMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, RowColumnClass const&) (ImageClass.cpp:263)
==2450480==    by 0x404D85: main (project3.cpp:88)
==2450480== 
==2450480== 3,243,600 (3,600 direct, 3,240,000 indirect) bytes in 1 blocks are definitely lost in loss record 4 of 4
==2450480==    at 0x4C38B6F: operator new[](unsigned long) (vg_replace_malloc.c:640)
==2450480==    by 0x4038A4: ImageClass::checkPixel(std::basic_ifstream<char, std::char_traits<char> >&) (ImageClass.cpp:171)
==2450480==    by 0x403D3C: ImageClass::checkInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (ImageClass.cpp:237)
==2450480==    by 0x404B88: main (project3.cpp:43)
==2450480== 
==2450480== LEAK SUMMARY:
==2450480==    definitely lost: 3,640 bytes in 2 blocks
==2450480==    indirectly lost: 3,240,100 bytes in 455 blocks
==2450480==      possibly lost: 0 bytes in 0 blocks
==2450480==    still reachable: 0 bytes in 0 blocks
==2450480==         suppressed: 0 bytes in 0 blocks
==2450480== 
==2450480== For lists of detected and suppressed errors, rerun with: -s
==2450480== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
bash-4.4$ exit
exit

Script done on 2023-04-02 20:00:51-04:00
